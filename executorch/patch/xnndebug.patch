diff --git a/backends/xnnpack/third-party/XNNPACK/CMakeLists.txt b/backends/xnnpack/third-party/XNNPACK/CMakeLists.txt
index 94bcad92e3..53f2425cee 100644
--- a/backends/xnnpack/third-party/XNNPACK/CMakeLists.txt
+++ b/backends/xnnpack/third-party/XNNPACK/CMakeLists.txt
@@ -332,6 +332,33 @@ ADD_COMPILE_DEFINITIONS("XNN_ENABLE_SPARSE=$<BOOL:${XNNPACK_ENABLE_SPARSE}>")
 ADD_COMPILE_DEFINITIONS("XNN_ENABLE_HVX=$<BOOL:${XNNPACK_ENABLE_HVX}>")
 ADD_COMPILE_DEFINITIONS("XNN_ENABLE_KLEIDIAI=$<BOOL:${XNNPACK_ENABLE_KLEIDIAI}>")
 
+message(STATUS "~~ XNNPACK_ENABLE_ARM_FP16_VECTOR=${XNNPACK_ENABLE_ARM_FP16_VECTOR}")
+message(STATUS "~~ XNNPACK_ENABLE_ARM_FP16_SCALAR=${XNNPACK_ENABLE_ARM_FP16_SCALAR}")
+message(STATUS "~~ XNNPACK_ENABLE_ARM_BF16=${XNNPACK_ENABLE_ARM_BF16}")
+message(STATUS "~~ XNNPACK_ENABLE_ARM_DOTPROD=${XNNPACK_ENABLE_ARM_DOTPROD}")
+message(STATUS "~~ XNNPACK_ENABLE_ARM_I8MM=${XNNPACK_ENABLE_ARM_I8MM}")
+message(STATUS "~~ XNNPACK_ENABLE_ARM_SME=${XNNPACK_ENABLE_ARM_SME}")
+message(STATUS "~~ XNNPACK_ENABLE_ARM_SME2=${XNNPACK_ENABLE_ARM_SME2}")
+message(STATUS "~~ XNNPACK_ENABLE_RISCV_VECTOR=${XNNPACK_ENABLE_RISCV_VECTOR}")
+message(STATUS "~~ XNNPACK_ENABLE_AVXVNNI=${XNNPACK_ENABLE_AVXVNNI}")
+message(STATUS "~~ XNNPACK_ENABLE_AVXVNNIINT8=${XNNPACK_ENABLE_AVXVNNIINT8}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX256SKX=${XNNPACK_ENABLE_AVX256SKX}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX256VNNI=${XNNPACK_ENABLE_AVX256VNNI}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX256VNNIGFNI=${XNNPACK_ENABLE_AVX256VNNIGFNI}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX512F=${XNNPACK_ENABLE_AVX512F}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX512SKX=${XNNPACK_ENABLE_AVX512SKX}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX512VBMI=${XNNPACK_ENABLE_AVX512VBMI}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX512VNNI=${XNNPACK_ENABLE_AVX512VNNI}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX512VNNIGFNI=${XNNPACK_ENABLE_AVX512VNNIGFNI}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX512AMX=${XNNPACK_ENABLE_AVX512AMX}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX512FP16=${XNNPACK_ENABLE_AVX512FP16}")
+message(STATUS "~~ XNNPACK_ENABLE_AVX512BF16=${XNNPACK_ENABLE_AVX512BF16}")
+message(STATUS "~~ XNNPACK_ENABLE_VSX=${XNNPACK_ENABLE_VSX}")
+message(STATUS "~~ XNNPACK_ENABLE_ASSEMBLY=${XNNPACK_ENABLE_ASSEMBLY}")
+message(STATUS "~~ XNNPACK_ENABLE_SPARSE=${XNNPACK_ENABLE_SPARSE}")
+message(STATUS "~~ XNNPACK_ENABLE_HVX=${XNNPACK_ENABLE_HVX}")
+message(STATUS "~~ XNNPACK_ENABLE_KLEIDIAI=${XNNPACK_ENABLE_KLEIDIAI}")
+
 IF(XNNPACK_TARGET_PROCESSOR MATCHES "Hexagon")
   ADD_COMPILE_DEFINITIONS("XNN_ENABLE_CPUINFO=0")
 ELSE()
diff --git a/install_requirements.sh b/install_requirements.sh
index ef156cd020..0e20235b28 100755
--- a/install_requirements.sh
+++ b/install_requirements.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/bash -x
 # Copyright (c) Meta Platforms, Inc. and affiliates.
 # All rights reserved.
 #
diff --git a/run_python_script.sh b/run_python_script.sh
index 4f9a74ec36..00e5912921 100755
--- a/run_python_script.sh
+++ b/run_python_script.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/bash -x
 # Copyright (c) Meta Platforms, Inc. and affiliates.
 # All rights reserved.
 #
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 57afd26544..7279d05c92 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -732,4 +732,6 @@ if(EXECUTORCH_BUILD_VULKAN)
   add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/backends/vulkan)
 endif()
 
+message(STATUS "(LNK2005-DEBUG: executorch) CMP0091=${CMAKE_POLICY_DEFAULT_CMP0091} CMAKE_MSVC_RUNTIME_LIBRARY=${CMAKE_MSVC_RUNTIME_LIBRARY}")
+
 include(Test.cmake)
diff --git a/extension/tensor/CMakeLists.txt b/extension/tensor/CMakeLists.txt
index 51f955570d..a0cc294587 100644
--- a/extension/tensor/CMakeLists.txt
+++ b/extension/tensor/CMakeLists.txt
@@ -16,6 +16,8 @@ if(NOT EXECUTORCH_ROOT)
   set(EXECUTORCH_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/../..)
 endif()
 
+message(STATUS "(LNK2005-DEBUG: extension/tensor) CMP0091=${CMAKE_POLICY_DEFAULT_CMP0091} CMAKE_MSVC_RUNTIME_LIBRARY=${CMAKE_MSVC_RUNTIME_LIBRARY}")
+
 list(TRANSFORM _extension_tensor__srcs PREPEND "${EXECUTORCH_ROOT}/")
 add_library(extension_tensor ${_extension_tensor__srcs})
 target_link_libraries(extension_tensor executorch_core)
diff --git a/extension/tensor/tensor_ptr.cpp b/extension/tensor/tensor_ptr.cpp
index 8a35e83a52..fdc7d4b694 100644
--- a/extension/tensor/tensor_ptr.cpp
+++ b/extension/tensor/tensor_ptr.cpp
@@ -12,6 +12,16 @@
 
 #include <executorch/runtime/core/exec_aten/util/tensor_util.h>
 
+// stringize helpers
+#define ET_STR1(x) #x
+#define ET_STR(x)  ET_STR1(x)
+#pragma message("[LNK2005-DEBUG: executorch-1] _ITERATOR_DEBUG_LEVEL=" ET_STR(_ITERATOR_DEBUG_LEVEL))
+#if defined(_DEBUG)
+  #pragma message("[LNK2005-DEBUG: executorch-2] _DEBUG=1")
+#else
+  #pragma message("[LNK2005-DEBUG: executorch-2] _DEBUG=0")
+#endif
+
 namespace executorch {
 namespace extension {
 namespace {

