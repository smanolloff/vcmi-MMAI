GHA runners preprocessor macros defined?:
        x64     x86     armv8
-----------------------------
WIN32   yes     yes     no
_WIN32  yes     yes     yes
WIN64   no      no      no
_WIN64  yes     no      yes

============= PROBLEMS:
**** msvc-x64 ****
VCMI_lib.lib(VCMI_lib.dll) : error LNK2005:
"public: __cdecl std::vector<int,class std::allocator<int> >::~vector<int,class std::allocator<int> >(void)" (??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ)
already defined in extension_tensor.lib(tensor_ptr.obj)

offending code is in lib/CBonusTypeHandler.h:
    #ifndef INSTANTIATE_CBonusTypeHandler_HERE
    extern template class std::vector<VCMI_LIB_WRAP_NAMESPACE(CBonusType)>;
    #endif

- tried force_load on as few libs as possible - no effect
TODO

**** msvs-x86 ****
executorch/runtime/platform/compat_unistd.h(16,10): fatal  error : 'unistd.h' file not found
XXX: TEMPORARY disabled applying windows-x86.patch as it conflicts with windows.patch debug statements

- WIP: fix SIZE_T argument error; fix overflow warnings

**** msvs-arm64 ****
FAILED: bin/AI/MMAI.dll bin/AI/MMAI.lib
C:\Windows\system32\cmd.exe /C "cd . && "C:\Program Files\CMake\bin\cmake.exe" -E vs_link_dll --msvc-ver=1944 --intdir=AI\MMAI\CMakeFiles\MMAI.dir --rc=C:\PROGRA~2\WI3CF2~1\10\bin\100261~1.0\arm64\rc.exe --mt=C:\PROGRA~2\WI3CF2~1\10\bin\100261~1.0\arm64\mt.exe --manifests  -- C:\PROGRA~1\MICROS~2\2022\ENTERP~1\VC\Tools\MSVC\1444~1.352\bin\HOSTAR~1\arm64\link.exe /nologo @CMakeFiles\MMAI.rsp  /out:bin\AI\MMAI.dll /implib:bin\AI\MMAI.lib /pdb:bin\AI\MMAI.pdb /dll /version:0.0 /machine:ARM64 /debug /INCREMENTAL && cd ."
LINK Pass 1: command "C:\PROGRA~1\MICROS~2\2022\ENTERP~1\VC\Tools\MSVC\1444~1.352\bin\HOSTAR~1\arm64\link.exe /nologo @CMakeFiles\MMAI.rsp /out:bin\AI\MMAI.dll /implib:bin\AI\MMAI.lib /pdb:bin\AI\MMAI.pdb /dll /version:0.0 /machine:ARM64 /debug /INCREMENTAL /MANIFEST /MANIFESTFILE:AI\MMAI\CMakeFiles\MMAI.dir/intermediate.manifest AI\MMAI\CMakeFiles\MMAI.dir/manifest.res" failed (exit code 1104) with the following output:
LINK : fatal error LNK1104: cannot open file 'sleef.lib'

.... this am unable to resolve :( In executorch .bzl files there are some sleef references
    e.g. runtime/core/portable_type/c10/c10/targets.bzl
        ^ but since runtime.is_oss = 1 (hardcoded in .buckconfig) => sleef is never added as a dep

- try disabling OPTIMIZED kernels (which seem to require sleef as per docs/source/kernel-library-overview.md)
-> XNNPACK.lib(gemm-config.obj) : error LNK2019: unresolved external symbol xnn_f16_gemm_minmax_ukernel_1x16__asm_aarch64_neonfp16arith_ld64 referenced in function init_f16_gemm_config
- WIP: XNNPACK_ENABLE_ASSEMBLY=OFF

**** android32 ****
ld: error: undefined symbol: __read_chk
>>> referenced by unistd.h:187 (/usr/local/lib/android/sdk/ndk/27.3.13750724/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include/bits/fortify/unistd.h:187)

- tried 2 different ways to disable FORTIFY for cpuinfo - only this one seems to work:
    +++ b/backends/xnnpack/third-party/cpuinfo/CMakeLists.txt
    target_compile_options(cpuinfo PRIVATE -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0)

====== EXECUTORCH targets & dependencies:

    tools/cmake/cmake_deps.toml

==== threadpool stuff
kernels_optimized
    -> links against extension_threadpool
        (see kernels/optimized/CMakeLists.txt)
extension_threadpool
    -> only built if EXECUTORCH_BUILD_PTHREADPOOL=ON + EXECUTORCH_BUILD_CPUINFO=ON
        (see executorch/CMakeLists.txt)

kernels_optimized always links against extension_threadpool:
Maybe that is the reason for the error in msvc ARM64 builds:
    FAILED: bin/AI/MMAI.dll bin/AI/MMAI.lib
    C:\Windows\system32\cmd.exe /C "cd . && "C:\Program Files\CMake\bin\cmake.exe" -E vs_link_dll --msvc-ver=1944 --intdir=AI\MMAI\CMakeFiles\MMAI.dir --rc=C:\PROGRA~2\WI3CF2~1\10\bin\100261~1.0\arm64\rc.exe --mt=C:\PROGRA~2\WI3CF2~1\10\bin\100261~1.0\arm64\mt.exe --manifests  -- C:\PROGRA~1\MICROS~2\2022\ENTERP~1\VC\Tools\MSVC\1444~1.352\bin\HOSTAR~1\arm64\link.exe /nologo @CMakeFiles\MMAI.rsp  /out:bin\AI\MMAI.dll /implib:bin\AI\MMAI.lib /pdb:bin\AI\MMAI.pdb /dll /version:0.0 /machine:ARM64 /debug /INCREMENTAL && cd ."
    LINK Pass 1: command "C:\PROGRA~1\MICROS~2\2022\ENTERP~1\VC\Tools\MSVC\1444~1.352\bin\HOSTAR~1\arm64\link.exe /nologo @CMakeFiles\MMAI.rsp /out:bin\AI\MMAI.dll /implib:bin\AI\MMAI.lib /pdb:bin\AI\MMAI.pdb /dll /version:0.0 /machine:ARM64 /debug /INCREMENTAL /MANIFEST /MANIFESTFILE:AI\MMAI\CMakeFiles\MMAI.dir/intermediate.manifest AI\MMAI\CMakeFiles\MMAI.dir/manifest.res" failed (exit code 1104) with the following output:
    LINK : fatal error LNK1104: cannot open file 'extension_threadpool.lib'
(although I have set -DEXECUTORCH_BUILD_PTHREADPOOL=OFF when building executorch)
Maybe I should also set -DEXECUTORCH_BUILD_KERNELS_OPTIMIZED=OFF ?

=>
    A/ -DEXECUTORCH_BUILD_KERNELS_OPTIMIZED=OFF
    B/ patch cpuinfo to disable FORTIFY SOURCE
        target_compile_definitions(cpuinfo PRIVATE _FORTIFY_SOURCE=0 __BIONIC_NO_FORTIFY)

...but XNNPACK also needs extension_threadpool
    backends/xnnpack/runtime/XNNCompiler.cpp:1908
